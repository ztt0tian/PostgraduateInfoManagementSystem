<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.dao.interfaces.RewardPunishRecordMapper">
  <resultMap id="BaseResultMap" type="com.system.model.RewardPunishRecord">
    <constructor>
      <idArg column="rp_record_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="student_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="reward_punish_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="term_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="rp_record_date" javaType="java.util.Date" jdbcType="DATE" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rp_record_id, student_id, reward_punish_id, term_id, rp_record_date
  </sql>
  <select id="selectByExample" parameterType="com.system.model.RewardPunishRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reward_punish_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reward_punish_record
    where rp_record_id = #{rp_record_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reward_punish_record
    where rp_record_id = #{rp_record_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.system.model.RewardPunishRecordExample">
    delete from reward_punish_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.system.model.RewardPunishRecord">
    insert into reward_punish_record (rp_record_id, student_id, reward_punish_id, 
      term_id, rp_record_date)
    values (#{rp_record_id,jdbcType=INTEGER}, #{student_id,jdbcType=INTEGER}, #{reward_punish_id,jdbcType=INTEGER}, 
      #{term_id,jdbcType=INTEGER}, #{rp_record_date,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.system.model.RewardPunishRecord">
    insert into reward_punish_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rp_record_id != null">
        rp_record_id,
      </if>
      <if test="student_id != null">
        student_id,
      </if>
      <if test="reward_punish_id != null">
        reward_punish_id,
      </if>
      <if test="term_id != null">
        term_id,
      </if>
      <if test="rp_record_date != null">
        rp_record_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rp_record_id != null">
        #{rp_record_id,jdbcType=INTEGER},
      </if>
      <if test="student_id != null">
        #{student_id,jdbcType=INTEGER},
      </if>
      <if test="reward_punish_id != null">
        #{reward_punish_id,jdbcType=INTEGER},
      </if>
      <if test="term_id != null">
        #{term_id,jdbcType=INTEGER},
      </if>
      <if test="rp_record_date != null">
        #{rp_record_date,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.system.model.RewardPunishRecordExample" resultType="java.lang.Long">
    select count(*) from reward_punish_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reward_punish_record
    <set>
      <if test="record.rp_record_id != null">
        rp_record_id = #{record.rp_record_id,jdbcType=INTEGER},
      </if>
      <if test="record.student_id != null">
        student_id = #{record.student_id,jdbcType=INTEGER},
      </if>
      <if test="record.reward_punish_id != null">
        reward_punish_id = #{record.reward_punish_id,jdbcType=INTEGER},
      </if>
      <if test="record.term_id != null">
        term_id = #{record.term_id,jdbcType=INTEGER},
      </if>
      <if test="record.rp_record_date != null">
        rp_record_date = #{record.rp_record_date,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reward_punish_record
    set rp_record_id = #{record.rp_record_id,jdbcType=INTEGER},
      student_id = #{record.student_id,jdbcType=INTEGER},
      reward_punish_id = #{record.reward_punish_id,jdbcType=INTEGER},
      term_id = #{record.term_id,jdbcType=INTEGER},
      rp_record_date = #{record.rp_record_date,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.model.RewardPunishRecord">
    update reward_punish_record
    <set>
      <if test="student_id != null">
        student_id = #{student_id,jdbcType=INTEGER},
      </if>
      <if test="reward_punish_id != null">
        reward_punish_id = #{reward_punish_id,jdbcType=INTEGER},
      </if>
      <if test="term_id != null">
        term_id = #{term_id,jdbcType=INTEGER},
      </if>
      <if test="rp_record_date != null">
        rp_record_date = #{rp_record_date,jdbcType=DATE},
      </if>
    </set>
    where rp_record_id = #{rp_record_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.model.RewardPunishRecord">
    update reward_punish_record
    set student_id = #{student_id,jdbcType=INTEGER},
      reward_punish_id = #{reward_punish_id,jdbcType=INTEGER},
      term_id = #{term_id,jdbcType=INTEGER},
      rp_record_date = #{rp_record_date,jdbcType=DATE}
    where rp_record_id = #{rp_record_id,jdbcType=INTEGER}
  </update>
</mapper>