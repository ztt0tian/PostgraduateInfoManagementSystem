<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.dao.interfaces.CourseMapper">
  <resultMap id="BaseResultMap" type="com.system.model.Course">
    <constructor>
      <idArg column="course_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="course_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="course_teacher" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="course_week" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="course_start_time" javaType="java.sql.Time" jdbcType="TIME" />
      <arg column="course_end_time" javaType="java.sql.Time" jdbcType="TIME" />
      <arg column="course_address" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, course_name, course_teacher, course_week, course_start_time, course_end_time, 
    course_address
  </sql>
  <select id="selectByExample" parameterType="com.system.model.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{course_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where course_id = #{course_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.system.model.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.system.model.Course">
    insert into course (course_id, course_name, course_teacher, 
      course_week, course_start_time, course_end_time, 
      course_address)
    values (#{course_id,jdbcType=INTEGER}, #{course_name,jdbcType=VARCHAR}, #{course_teacher,jdbcType=VARCHAR}, 
      #{course_week,jdbcType=VARCHAR}, #{course_start_time,jdbcType=TIME}, #{course_end_time,jdbcType=TIME}, 
      #{course_address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.system.model.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="course_id != null">
        course_id,
      </if>
      <if test="course_name != null">
        course_name,
      </if>
      <if test="course_teacher != null">
        course_teacher,
      </if>
      <if test="course_week != null">
        course_week,
      </if>
      <if test="course_start_time != null">
        course_start_time,
      </if>
      <if test="course_end_time != null">
        course_end_time,
      </if>
      <if test="course_address != null">
        course_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="course_id != null">
        #{course_id,jdbcType=INTEGER},
      </if>
      <if test="course_name != null">
        #{course_name,jdbcType=VARCHAR},
      </if>
      <if test="course_teacher != null">
        #{course_teacher,jdbcType=VARCHAR},
      </if>
      <if test="course_week != null">
        #{course_week,jdbcType=VARCHAR},
      </if>
      <if test="course_start_time != null">
        #{course_start_time,jdbcType=TIME},
      </if>
      <if test="course_end_time != null">
        #{course_end_time,jdbcType=TIME},
      </if>
      <if test="course_address != null">
        #{course_address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.system.model.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.course_id != null">
        course_id = #{record.course_id,jdbcType=INTEGER},
      </if>
      <if test="record.course_name != null">
        course_name = #{record.course_name,jdbcType=VARCHAR},
      </if>
      <if test="record.course_teacher != null">
        course_teacher = #{record.course_teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.course_week != null">
        course_week = #{record.course_week,jdbcType=VARCHAR},
      </if>
      <if test="record.course_start_time != null">
        course_start_time = #{record.course_start_time,jdbcType=TIME},
      </if>
      <if test="record.course_end_time != null">
        course_end_time = #{record.course_end_time,jdbcType=TIME},
      </if>
      <if test="record.course_address != null">
        course_address = #{record.course_address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set course_id = #{record.course_id,jdbcType=INTEGER},
      course_name = #{record.course_name,jdbcType=VARCHAR},
      course_teacher = #{record.course_teacher,jdbcType=VARCHAR},
      course_week = #{record.course_week,jdbcType=VARCHAR},
      course_start_time = #{record.course_start_time,jdbcType=TIME},
      course_end_time = #{record.course_end_time,jdbcType=TIME},
      course_address = #{record.course_address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.model.Course">
    update course
    <set>
      <if test="course_name != null">
        course_name = #{course_name,jdbcType=VARCHAR},
      </if>
      <if test="course_teacher != null">
        course_teacher = #{course_teacher,jdbcType=VARCHAR},
      </if>
      <if test="course_week != null">
        course_week = #{course_week,jdbcType=VARCHAR},
      </if>
      <if test="course_start_time != null">
        course_start_time = #{course_start_time,jdbcType=TIME},
      </if>
      <if test="course_end_time != null">
        course_end_time = #{course_end_time,jdbcType=TIME},
      </if>
      <if test="course_address != null">
        course_address = #{course_address,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{course_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.model.Course">
    update course
    set course_name = #{course_name,jdbcType=VARCHAR},
      course_teacher = #{course_teacher,jdbcType=VARCHAR},
      course_week = #{course_week,jdbcType=VARCHAR},
      course_start_time = #{course_start_time,jdbcType=TIME},
      course_end_time = #{course_end_time,jdbcType=TIME},
      course_address = #{course_address,jdbcType=VARCHAR}
    where course_id = #{course_id,jdbcType=INTEGER}
  </update>
</mapper>